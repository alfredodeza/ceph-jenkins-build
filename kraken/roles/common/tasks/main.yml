---

- name: Create a home for Helga.
  sudo: yes
  file: path={{ helga_home }} owner={{ ansible_ssh_user }} group={{ ansible_ssh_user }} state=directory recurse=yes

- name: Install Cryptomunitions.
  sudo: yes
  yum: name={{ item }} state=present
  with_items: helga_ssl_requirements
  when: helga_use_ssl

- name: Install GCC
  sudo: yes
  yum: name=gcc state=present

- name: Enable EPEL
  sudo: yes
  yum: name=epel-release state=present
#- name: "udpate apt repo"
#  sudo: true
#  action: apt update-cache=yes

- name: Retrieve software requirements.
  sudo: yes
  yum: name={{ item }} state=present
  with_items: helga_system_packages

- name: Create a virtualenv with latest pip.
  pip: name=pip virtualenv={{ helga_home }} extra_args='--upgrade'

- name: Conceive the Helga.
  pip: name=helga virtualenv={{ helga_home }}

- name: Helga unreleased enhancements.
  pip: name={{ item }} state=present extra_args="-e" virtualenv={{ helga_home }}
  with_items: helga_external_plugins
  notify: Wake up, Helga...

- name: Helga released enhancements.
  pip: name={{ item }} state=present virtualenv={{ helga_home }}
  with_items: helga_pypi_plugins
  notify: Wake up, Helga...

#- name: Install custom personality.
#template: src=custom_settings.j2 dest={{ helga_home }}/bin/custom_settings.py
#notify: Wake up, Helga...
#
- name: Create settings directory
  file: path={{ helga_settings_path }}
        state=directory

- name: Install base personality.
  template: src=custom_settings.j2
            dest={{ helga_settings_path }}/00_base_settings.py

- name: Install personality customizations (files).
  copy: src={{ item }}
        dest={{ helga_settings_path }}
# this one is tricky, because the relative path is relative to
# roles/common/files
  with_fileglob:
      - helga/settings.d/*

- name: Custom settings, ASSEMBLE!
  assemble: src={{ helga_settings_path }}/
            dest={{ helga_home }}/bin/custom_settings.py

- include: circus.yml
